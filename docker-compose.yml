services:

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - ft-network
    env_file:
      - ./.env
    environment:
      SPRING_DATA_MONGODB_URI: ${MONGODB_URI}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: pkc-lgk0v.us-west1.gcp.confluent.cloud:9092
      SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL
      SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_API_KEY}' password='${KAFKA_API_SECRET}';
      SPRING_KAFKA_PROPERTIES_SASL_MECHANISM: PLAIN
      USER_TOPIC: users

  transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    env_file:
      - ./.env
    networks:
      - ft-network
    environment:
      SPRING_DATA_MONGODB_URI: ${MONGODB_URI}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: pkc-lgk0v.us-west1.gcp.confluent.cloud:9092
      SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL
      SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_API_KEY}' password='${KAFKA_API_SECRET}';
      SPRING_KAFKA_PROPERTIES_SASL_MECHANISM: PLAIN
      TRANSACTION_TOPIC: transactions

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    env_file:
      - ./notification-service/.env
      - ./.env
    networks:
      - ft-network
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: pkc-lgk0v.us-west1.gcp.confluent.cloud:9092
      SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL
      SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_API_KEY}' password='${KAFKA_API_SECRET}';
      SPRING_KAFKA_PROPERTIES_SASL_MECHANISM: PLAIN

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - user-service
      - transaction-service
    networks:
      - ft-network

networks:
  ft-network:
    driver: bridge

volumes:
  mongo-data: