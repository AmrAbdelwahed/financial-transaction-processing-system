version: '3.8'

services:
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - ft-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - ft-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "users:1:1,transactions:1:1"
    depends_on:
      - zookeeper
    networks:
      - ft-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - mongo
      - kafka
    networks:
      - ft-network
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/users
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      USER_TOPIC: users

  transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mongo
      - kafka
    networks:
      - ft-network
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/transactions
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      TRANSACTION_TOPIC: transactions

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - kafka
    networks:
      - ft-network
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - transaction-service
    networks:
      - ft-network
    environment:
      REACT_APP_USER_SERVICE_URL: http://user-service:8081
      REACT_APP_TRANSACTION_SERVICE_URL: http://transaction-service:8080

networks:
  ft-network:
    driver: bridge

volumes:
  mongo-data: